/* Capstone Disassembly Engine, http://www.capstone-engine.org */
/* By Nguyen Anh Quynh <aquynh@gmail.com>, 2013-2019 */

/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
static const char *getRegisterName(unsigned RegNo, unsigned AltIdx)
{

#ifndef CAPSTONE_DIET
  static const char AsmStrsNoRegAltName[] = {
  /* 0 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', 0,
  /* 13 */ 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', 0,
  /* 26 */ 'W', '9', '_', 'W', '1', '0', 0,
  /* 33 */ 'X', '9', '_', 'X', '1', '0', 0,
  /* 40 */ 'Z', '7', '_', 'Z', '8', '_', 'Z', '9', '_', 'Z', '1', '0', 0,
  /* 53 */ 'b', '1', '0', 0,
  /* 57 */ 'd', '1', '0', 0,
  /* 61 */ 'h', '1', '0', 0,
  /* 65 */ 'p', '1', '0', 0,
  /* 69 */ 'q', '1', '0', 0,
  /* 73 */ 's', '1', '0', 0,
  /* 77 */ 'w', '1', '0', 0,
  /* 81 */ 'x', '1', '0', 0,
  /* 85 */ 'z', '1', '0', 0,
  /* 89 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', 0,
  /* 105 */ 'Q', '1', '7', '_', 'Q', '1', '8', '_', 'Q', '1', '9', '_', 'Q', '2', '0', 0,
  /* 121 */ 'W', '1', '9', '_', 'W', '2', '0', 0,
  /* 129 */ 'X', '1', '9', '_', 'X', '2', '0', 0,
  /* 137 */ 'Z', '1', '7', '_', 'Z', '1', '8', '_', 'Z', '1', '9', '_', 'Z', '2', '0', 0,
  /* 153 */ 'b', '2', '0', 0,
  /* 157 */ 'd', '2', '0', 0,
  /* 161 */ 'h', '2', '0', 0,
  /* 165 */ 'q', '2', '0', 0,
  /* 169 */ 's', '2', '0', 0,
  /* 173 */ 'w', '2', '0', 0,
  /* 177 */ 'x', '2', '0', 0,
  /* 181 */ 'z', '2', '0', 0,
  /* 185 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', 0,
  /* 201 */ 'Q', '2', '7', '_', 'Q', '2', '8', '_', 'Q', '2', '9', '_', 'Q', '3', '0', 0,
  /* 217 */ 'W', '2', '9', '_', 'W', '3', '0', 0,
  /* 225 */ 'Z', '2', '7', '_', 'Z', '2', '8', '_', 'Z', '2', '9', '_', 'Z', '3', '0', 0,
  /* 241 */ 'b', '3', '0', 0,
  /* 245 */ 'd', '3', '0', 0,
  /* 249 */ 'h', '3', '0', 0,
  /* 253 */ 'q', '3', '0', 0,
  /* 257 */ 's', '3', '0', 0,
  /* 261 */ 'w', '3', '0', 0,
  /* 265 */ 'x', '3', '0', 0,
  /* 269 */ 'z', '3', '0', 0,
  /* 273 */ 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', '_', 'D', '0', 0,
  /* 288 */ 'Q', '2', '9', '_', 'Q', '3', '0', '_', 'Q', '3', '1', '_', 'Q', '0', 0,
  /* 303 */ 'W', 'Z', 'R', '_', 'W', '0', 0,
  /* 310 */ 'X', 'Z', 'R', '_', 'X', '0', 0,
  /* 317 */ 'Z', '2', '9', '_', 'Z', '3', '0', '_', 'Z', '3', '1', '_', 'Z', '0', 0,
  /* 332 */ 'b', '0', 0,
  /* 335 */ 'd', '0', 0,
  /* 338 */ 'h', '0', 0,
  /* 341 */ 'p', '0', 0,
  /* 344 */ 'q', '0', 0,
  /* 347 */ 's', '0', 0,
  /* 350 */ 'w', '0', 0,
  /* 353 */ 'x', '0', 0,
  /* 356 */ 'z', '0', 0,
  /* 359 */ 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', 0,
  /* 373 */ 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', 0,
  /* 387 */ 'W', '1', '0', '_', 'W', '1', '1', 0,
  /* 395 */ 'X', '1', '0', '_', 'X', '1', '1', 0,
  /* 403 */ 'Z', '8', '_', 'Z', '9', '_', 'Z', '1', '0', '_', 'Z', '1', '1', 0,
  /* 417 */ 'b', '1', '1', 0,
  /* 421 */ 'd', '1', '1', 0,
  /* 425 */ 'h', '1', '1', 0,
  /* 429 */ 'p', '1', '1', 0,
  /* 433 */ 'q', '1', '1', 0,
  /* 437 */ 's', '1', '1', 0,
  /* 441 */ 'w', '1', '1', 0,
  /* 445 */ 'x', '1', '1', 0,
  /* 449 */ 'z', '1', '1', 0,
  /* 453 */ 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', 0,
  /* 469 */ 'Q', '1', '8', '_', 'Q', '1', '9', '_', 'Q', '2', '0', '_', 'Q', '2', '1', 0,
  /* 485 */ 'W', '2', '0', '_', 'W', '2', '1', 0,
  /* 493 */ 'X', '2', '0', '_', 'X', '2', '1', 0,
  /* 501 */ 'Z', '1', '8', '_', 'Z', '1', '9', '_', 'Z', '2', '0', '_', 'Z', '2', '1', 0,
  /* 517 */ 'b', '2', '1', 0,
  /* 521 */ 'd', '2', '1', 0,
  /* 525 */ 'h', '2', '1', 0,
  /* 529 */ 'q', '2', '1', 0,
  /* 533 */ 's', '2', '1', 0,
  /* 537 */ 'w', '2', '1', 0,
  /* 541 */ 'x', '2', '1', 0,
  /* 545 */ 'z', '2', '1', 0,
  /* 549 */ 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', 0,
  /* 565 */ 'Q', '2', '8', '_', 'Q', '2', '9', '_', 'Q', '3', '0', '_', 'Q', '3', '1', 0,
  /* 581 */ 'Z', '2', '8', '_', 'Z', '2', '9', '_', 'Z', '3', '0', '_', 'Z', '3', '1', 0,
  /* 597 */ 'b', '3', '1', 0,
  /* 601 */ 'd', '3', '1', 0,
  /* 605 */ 'h', '3', '1', 0,
  /* 609 */ 'q', '3', '1', 0,
  /* 613 */ 's', '3', '1', 0,
  /* 617 */ 'z', '3', '1', 0,
  /* 621 */ 'D', '3', '0', '_', 'D', '3', '1', '_', 'D', '0', '_', 'D', '1', 0,
  /* 635 */ 'Q', '3', '0', '_', 'Q', '3', '1', '_', 'Q', '0', '_', 'Q', '1', 0,
  /* 649 */ 'W', '0', '_', 'W', '1', 0,
  /* 655 */ 'X', '0', '_', 'X', '1', 0,
  /* 661 */ 'Z', '3', '0', '_', 'Z', '3', '1', '_', 'Z', '0', '_', 'Z', '1', 0,
  /* 675 */ 'b', '1', 0,
  /* 678 */ 'd', '1', 0,
  /* 681 */ 'h', '1', 0,
  /* 684 */ 'p', '1', 0,
  /* 687 */ 'q', '1', 0,
  /* 690 */ 's', '1', 0,
  /* 693 */ 'w', '1', 0,
  /* 696 */ 'x', '1', 0,
  /* 699 */ 'z', '1', 0,
  /* 702 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', 0,
  /* 717 */ 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', 0,
  /* 732 */ 'W', '1', '1', '_', 'W', '1', '2', 0,
  /* 740 */ 'X', '1', '1', '_', 'X', '1', '2', 0,
  /* 748 */ 'Z', '9', '_', 'Z', '1', '0', '_', 'Z', '1', '1', '_', 'Z', '1', '2', 0,
  /* 763 */ 'b', '1', '2', 0,
  /* 767 */ 'd', '1', '2', 0,
  /* 771 */ 'h', '1', '2', 0,
  /* 775 */ 'p', '1', '2', 0,
  /* 779 */ 'q', '1', '2', 0,
  /* 783 */ 's', '1', '2', 0,
  /* 787 */ 'w', '1', '2', 0,
  /* 791 */ 'x', '1', '2', 0,
  /* 795 */ 'z', '1', '2', 0,
  /* 799 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', 0,
  /* 815 */ 'Q', '1', '9', '_', 'Q', '2', '0', '_', 'Q', '2', '1', '_', 'Q', '2', '2', 0,
  /* 831 */ 'W', '2', '1', '_', 'W', '2', '2', 0,
  /* 839 */ 'X', '2', '1', '_', 'X', '2', '2', 0,
  /* 847 */ 'Z', '1', '9', '_', 'Z', '2', '0', '_', 'Z', '2', '1', '_', 'Z', '2', '2', 0,
  /* 863 */ 'b', '2', '2', 0,
  /* 867 */ 'd', '2', '2', 0,
  /* 871 */ 'h', '2', '2', 0,
  /* 875 */ 'q', '2', '2', 0,
  /* 879 */ 's', '2', '2', 0,
  /* 883 */ 'w', '2', '2', 0,
  /* 887 */ 'x', '2', '2', 0,
  /* 891 */ 'z', '2', '2', 0,
  /* 895 */ 'D', '3', '1', '_', 'D', '0', '_', 'D', '1', '_', 'D', '2', 0,
  /* 908 */ 'Q', '3', '1', '_', 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', 0,
  /* 921 */ 'W', '1', '_', 'W', '2', 0,
  /* 927 */ 'X', '1', '_', 'X', '2', 0,
  /* 933 */ 'Z', '3', '1', '_', 'Z', '0', '_', 'Z', '1', '_', 'Z', '2', 0,
  /* 946 */ 'b', '2', 0,
  /* 949 */ 'd', '2', 0,
  /* 952 */ 'h', '2', 0,
  /* 955 */ 'p', '2', 0,
  /* 958 */ 'q', '2', 0,
  /* 961 */ 's', '2', 0,
  /* 964 */ 'w', '2', 0,
  /* 967 */ 'x', '2', 0,
  /* 970 */ 'z', '2', 0,
  /* 973 */ 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', 0,
  /* 989 */ 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', 0,
  /* 1005 */ 'W', '1', '2', '_', 'W', '1', '3', 0,
  /* 1013 */ 'X', '1', '2', '_', 'X', '1', '3', 0,
  /* 1021 */ 'Z', '1', '0', '_', 'Z', '1', '1', '_', 'Z', '1', '2', '_', 'Z', '1', '3', 0,
  /* 1037 */ 'b', '1', '3', 0,
  /* 1041 */ 'd', '1', '3', 0,
  /* 1045 */ 'h', '1', '3', 0,
  /* 1049 */ 'p', '1', '3', 0,
  /* 1053 */ 'q', '1', '3', 0,
  /* 1057 */ 's', '1', '3', 0,
  /* 1061 */ 'w', '1', '3', 0,
  /* 1065 */ 'x', '1', '3', 0,
  /* 1069 */ 'z', '1', '3', 0,
  /* 1073 */ 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', 0,
  /* 1089 */ 'Q', '2', '0', '_', 'Q', '2', '1', '_', 'Q', '2', '2', '_', 'Q', '2', '3', 0,
  /* 1105 */ 'W', '2', '2', '_', 'W', '2', '3', 0,
  /* 1113 */ 'X', '2', '2', '_', 'X', '2', '3', 0,
  /* 1121 */ 'Z', '2', '0', '_', 'Z', '2', '1', '_', 'Z', '2', '2', '_', 'Z', '2', '3', 0,
  /* 1137 */ 'b', '2', '3', 0,
  /* 1141 */ 'd', '2', '3', 0,
  /* 1145 */ 'h', '2', '3', 0,
  /* 1149 */ 'q', '2', '3', 0,
  /* 1153 */ 's', '2', '3', 0,
  /* 1157 */ 'w', '2', '3', 0,
  /* 1161 */ 'x', '2', '3', 0,
  /* 1165 */ 'z', '2', '3', 0,
  /* 1169 */ 'D', '0', '_', 'D', '1', '_', 'D', '2', '_', 'D', '3', 0,
  /* 1181 */ 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', 0,
  /* 1193 */ 'W', '2', '_', 'W', '3', 0,
  /* 1199 */ 'X', '2', '_', 'X', '3', 0,
  /* 1205 */ 'Z', '0', '_', 'Z', '1', '_', 'Z', '2', '_', 'Z', '3', 0,
  /* 1217 */ 'b', '3', 0,
  /* 1220 */ 'd', '3', 0,
  /* 1223 */ 'h', '3', 0,
  /* 1226 */ 'p', '3', 0,
  /* 1229 */ 'q', '3', 0,
  /* 1232 */ 's', '3', 0,
  /* 1235 */ 'w', '3', 0,
  /* 1238 */ 'x', '3', 0,
  /* 1241 */ 'z', '3', 0,
  /* 1244 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', 0,
  /* 1260 */ 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', 0,
  /* 1276 */ 'W', '1', '3', '_', 'W', '1', '4', 0,
  /* 1284 */ 'X', '1', '3', '_', 'X', '1', '4', 0,
  /* 1292 */ 'Z', '1', '1', '_', 'Z', '1', '2', '_', 'Z', '1', '3', '_', 'Z', '1', '4', 0,
  /* 1308 */ 'b', '1', '4', 0,
  /* 1312 */ 'd', '1', '4', 0,
  /* 1316 */ 'h', '1', '4', 0,
  /* 1320 */ 'p', '1', '4', 0,
  /* 1324 */ 'q', '1', '4', 0,
  /* 1328 */ 's', '1', '4', 0,
  /* 1332 */ 'w', '1', '4', 0,
  /* 1336 */ 'x', '1', '4', 0,
  /* 1340 */ 'z', '1', '4', 0,
  /* 1344 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', 0,
  /* 1360 */ 'Q', '2', '1', '_', 'Q', '2', '2', '_', 'Q', '2', '3', '_', 'Q', '2', '4', 0,
  /* 1376 */ 'W', '2', '3', '_', 'W', '2', '4', 0,
  /* 1384 */ 'X', '2', '3', '_', 'X', '2', '4', 0,
  /* 1392 */ 'Z', '2', '1', '_', 'Z', '2', '2', '_', 'Z', '2', '3', '_', 'Z', '2', '4', 0,
  /* 1408 */ 'b', '2', '4', 0,
  /* 1412 */ 'd', '2', '4', 0,
  /* 1416 */ 'h', '2', '4', 0,
  /* 1420 */ 'q', '2', '4', 0,
  /* 1424 */ 's', '2', '4', 0,
  /* 1428 */ 'w', '2', '4', 0,
  /* 1432 */ 'x', '2', '4', 0,
  /* 1436 */ 'z', '2', '4', 0,
  /* 1440 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', '_', 'D', '4', 0,
  /* 1452 */ 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', 0,
  /* 1464 */ 'W', '3', '_', 'W', '4', 0,
  /* 1470 */ 'X', '3', '_', 'X', '4', 0,
  /* 1476 */ 'Z', '1', '_', 'Z', '2', '_', 'Z', '3', '_', 'Z', '4', 0,
  /* 1488 */ 'b', '4', 0,
  /* 1491 */ 'd', '4', 0,
  /* 1494 */ 'h', '4', 0,
  /* 1497 */ 'p', '4', 0,
  /* 1500 */ 'q', '4', 0,
  /* 1503 */ 's', '4', 0,
  /* 1506 */ 'w', '4', 0,
  /* 1509 */ 'x', '4', 0,
  /* 1512 */ 'z', '4', 0,
  /* 1515 */ 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', 0,
  /* 1531 */ 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', 0,
  /* 1547 */ 'W', '1', '4', '_', 'W', '1', '5', 0,
  /* 1555 */ 'X', '1', '4', '_', 'X', '1', '5', 0,
  /* 1563 */ 'Z', '1', '2', '_', 'Z', '1', '3', '_', 'Z', '1', '4', '_', 'Z', '1', '5', 0,
  /* 1579 */ 'b', '1', '5', 0,
  /* 1583 */ 'd', '1', '5', 0,
  /* 1587 */ 'h', '1', '5', 0,
  /* 1591 */ 'p', '1', '5', 0,
  /* 1595 */ 'q', '1', '5', 0,
  /* 1599 */ 's', '1', '5', 0,
  /* 1603 */ 'w', '1', '5', 0,
  /* 1607 */ 'x', '1', '5', 0,
  /* 1611 */ 'z', '1', '5', 0,
  /* 1615 */ 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', 0,
  /* 1631 */ 'Q', '2', '2', '_', 'Q', '2', '3', '_', 'Q', '2', '4', '_', 'Q', '2', '5', 0,
  /* 1647 */ 'W', '2', '4', '_', 'W', '2', '5', 0,
  /* 1655 */ 'X', '2', '4', '_', 'X', '2', '5', 0,
  /* 1663 */ 'Z', '2', '2', '_', 'Z', '2', '3', '_', 'Z', '2', '4', '_', 'Z', '2', '5', 0,
  /* 1679 */ 'b', '2', '5', 0,
  /* 1683 */ 'd', '2', '5', 0,
  /* 1687 */ 'h', '2', '5', 0,
  /* 1691 */ 'q', '2', '5', 0,
  /* 1695 */ 's', '2', '5', 0,
  /* 1699 */ 'w', '2', '5', 0,
  /* 1703 */ 'x', '2', '5', 0,
  /* 1707 */ 'z', '2', '5', 0,
  /* 1711 */ 'D', '2', '_', 'D', '3', '_', 'D', '4', '_', 'D', '5', 0,
  /* 1723 */ 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', 0,
  /* 1735 */ 'W', '4', '_', 'W', '5', 0,
  /* 1741 */ 'X', '4', '_', 'X', '5', 0,
  /* 1747 */ 'Z', '2', '_', 'Z', '3', '_', 'Z', '4', '_', 'Z', '5', 0,
  /* 1759 */ 'b', '5', 0,
  /* 1762 */ 'd', '5', 0,
  /* 1765 */ 'h', '5', 0,
  /* 1768 */ 'p', '5', 0,
  /* 1771 */ 'q', '5', 0,
  /* 1774 */ 's', '5', 0,
  /* 1777 */ 'w', '5', 0,
  /* 1780 */ 'x', '5', 0,
  /* 1783 */ 'z', '5', 0,
  /* 1786 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', 0,
  /* 1802 */ 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', '_', 'Q', '1', '6', 0,
  /* 1818 */ 'W', '1', '5', '_', 'W', '1', '6', 0,
  /* 1826 */ 'X', '1', '5', '_', 'X', '1', '6', 0,
  /* 1834 */ 'Z', '1', '3', '_', 'Z', '1', '4', '_', 'Z', '1', '5', '_', 'Z', '1', '6', 0,
  /* 1850 */ 'b', '1', '6', 0,
  /* 1854 */ 'd', '1', '6', 0,
  /* 1858 */ 'h', '1', '6', 0,
  /* 1862 */ 'q', '1', '6', 0,
  /* 1866 */ 's', '1', '6', 0,
  /* 1870 */ 'w', '1', '6', 0,
  /* 1874 */ 'x', '1', '6', 0,
  /* 1878 */ 'z', '1', '6', 0,
  /* 1882 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', 0,
  /* 1898 */ 'Q', '2', '3', '_', 'Q', '2', '4', '_', 'Q', '2', '5', '_', 'Q', '2', '6', 0,
  /* 1914 */ 'W', '2', '5', '_', 'W', '2', '6', 0,
  /* 1922 */ 'X', '2', '5', '_', 'X', '2', '6', 0,
  /* 1930 */ 'Z', '2', '3', '_', 'Z', '2', '4', '_', 'Z', '2', '5', '_', 'Z', '2', '6', 0,
  /* 1946 */ 'b', '2', '6', 0,
  /* 1950 */ 'd', '2', '6', 0,
  /* 1954 */ 'h', '2', '6', 0,
  /* 1958 */ 'q', '2', '6', 0,
  /* 1962 */ 's', '2', '6', 0,
  /* 1966 */ 'w', '2', '6', 0,
  /* 1970 */ 'x', '2', '6', 0,
  /* 1974 */ 'z', '2', '6', 0,
  /* 1978 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', '_', 'D', '6', 0,
  /* 1990 */ 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', 0,
  /* 2002 */ 'W', '5', '_', 'W', '6', 0,
  /* 2008 */ 'X', '5', '_', 'X', '6', 0,
  /* 2014 */ 'Z', '3', '_', 'Z', '4', '_', 'Z', '5', '_', 'Z', '6', 0,
  /* 2026 */ 'b', '6', 0,
  /* 2029 */ 'd', '6', 0,
  /* 2032 */ 'h', '6', 0,
  /* 2035 */ 'p', '6', 0,
  /* 2038 */ 'q', '6', 0,
  /* 2041 */ 's', '6', 0,
  /* 2044 */ 'w', '6', 0,
  /* 2047 */ 'x', '6', 0,
  /* 2050 */ 'z', '6', 0,
  /* 2053 */ 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', 0,
  /* 2069 */ 'Q', '1', '4', '_', 'Q', '1', '5', '_', 'Q', '1', '6', '_', 'Q', '1', '7', 0,
  /* 2085 */ 'W', '1', '6', '_', 'W', '1', '7', 0,
  /* 2093 */ 'X', '1', '6', '_', 'X', '1', '7', 0,
  /* 2101 */ 'Z', '1', '4', '_', 'Z', '1', '5', '_', 'Z', '1', '6', '_', 'Z', '1', '7', 0,
  /* 2117 */ 'b', '1', '7', 0,
  /* 2121 */ 'd', '1', '7', 0,
  /* 2125 */ 'h', '1', '7', 0,
  /* 2129 */ 'q', '1', '7', 0,
  /* 2133 */ 's', '1', '7', 0,
  /* 2137 */ 'w', '1', '7', 0,
  /* 2141 */ 'x', '1', '7', 0,
  /* 2145 */ 'z', '1', '7', 0,
  /* 2149 */ 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', 0,
  /* 2165 */ 'Q', '2', '4', '_', 'Q', '2', '5', '_', 'Q', '2', '6', '_', 'Q', '2', '7', 0,
  /* 2181 */ 'W', '2', '6', '_', 'W', '2', '7', 0,
  /* 2189 */ 'X', '2', '6', '_', 'X', '2', '7', 0,
  /* 2197 */ 'Z', '2', '4', '_', 'Z', '2', '5', '_', 'Z', '2', '6', '_', 'Z', '2', '7', 0,
  /* 2213 */ 'b', '2', '7', 0,
  /* 2217 */ 'd', '2', '7', 0,
  /* 2221 */ 'h', '2', '7', 0,
  /* 2225 */ 'q', '2', '7', 0,
  /* 2229 */ 's', '2', '7', 0,
  /* 2233 */ 'w', '2', '7', 0,
  /* 2237 */ 'x', '2', '7', 0,
  /* 2241 */ 'z', '2', '7', 0,
  /* 2245 */ 'D', '4', '_', 'D', '5', '_', 'D', '6', '_', 'D', '7', 0,
  /* 2257 */ 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', 0,
  /* 2269 */ 'W', '6', '_', 'W', '7', 0,
  /* 2275 */ 'X', '6', '_', 'X', '7', 0,
  /* 2281 */ 'Z', '4', '_', 'Z', '5', '_', 'Z', '6', '_', 'Z', '7', 0,
  /* 2293 */ 'b', '7', 0,
  /* 2296 */ 'd', '7', 0,
  /* 2299 */ 'h', '7', 0,
  /* 2302 */ 'p', '7', 0,
  /* 2305 */ 'q', '7', 0,
  /* 2308 */ 's', '7', 0,
  /* 2311 */ 'w', '7', 0,
  /* 2314 */ 'x', '7', 0,
  /* 2317 */ 'z', '7', 0,
  /* 2320 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', 0,
  /* 2336 */ 'Q', '1', '5', '_', 'Q', '1', '6', '_', 'Q', '1', '7', '_', 'Q', '1', '8', 0,
  /* 2352 */ 'W', '1', '7', '_', 'W', '1', '8', 0,
  /* 2360 */ 'X', '1', '7', '_', 'X', '1', '8', 0,
  /* 2368 */ 'Z', '1', '5', '_', 'Z', '1', '6', '_', 'Z', '1', '7', '_', 'Z', '1', '8', 0,
  /* 2384 */ 'b', '1', '8', 0,
  /* 2388 */ 'd', '1', '8', 0,
  /* 2392 */ 'h', '1', '8', 0,
  /* 2396 */ 'q', '1', '8', 0,
  /* 2400 */ 's', '1', '8', 0,
  /* 2404 */ 'w', '1', '8', 0,
  /* 2408 */ 'x', '1', '8', 0,
  /* 2412 */ 'z', '1', '8', 0,
  /* 2416 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', 0,
  /* 2432 */ 'Q', '2', '5', '_', 'Q', '2', '6', '_', 'Q', '2', '7', '_', 'Q', '2', '8', 0,
  /* 2448 */ 'W', '2', '7', '_', 'W', '2', '8', 0,
  /* 2456 */ 'X', '2', '7', '_', 'X', '2', '8', 0,
  /* 2464 */ 'Z', '2', '5', '_', 'Z', '2', '6', '_', 'Z', '2', '7', '_', 'Z', '2', '8', 0,
  /* 2480 */ 'b', '2', '8', 0,
  /* 2484 */ 'd', '2', '8', 0,
  /* 2488 */ 'h', '2', '8', 0,
  /* 2492 */ 'q', '2', '8', 0,
  /* 2496 */ 's', '2', '8', 0,
  /* 2500 */ 'w', '2', '8', 0,
  /* 2504 */ 'x', '2', '8', 0,
  /* 2508 */ 'z', '2', '8', 0,
  /* 2512 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', '_', 'D', '8', 0,
  /* 2524 */ 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', 0,
  /* 2536 */ 'W', '7', '_', 'W', '8', 0,
  /* 2542 */ 'X', '7', '_', 'X', '8', 0,
  /* 2548 */ 'Z', '5', '_', 'Z', '6', '_', 'Z', '7', '_', 'Z', '8', 0,
  /* 2560 */ 'b', '8', 0,
  /* 2563 */ 'd', '8', 0,
  /* 2566 */ 'h', '8', 0,
  /* 2569 */ 'p', '8', 0,
  /* 2572 */ 'q', '8', 0,
  /* 2575 */ 's', '8', 0,
  /* 2578 */ 'w', '8', 0,
  /* 2581 */ 'x', '8', 0,
  /* 2584 */ 'z', '8', 0,
  /* 2587 */ 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', 0,
  /* 2603 */ 'Q', '1', '6', '_', 'Q', '1', '7', '_', 'Q', '1', '8', '_', 'Q', '1', '9', 0,
  /* 2619 */ 'W', '1', '8', '_', 'W', '1', '9', 0,
  /* 2627 */ 'X', '1', '8', '_', 'X', '1', '9', 0,
  /* 2635 */ 'Z', '1', '6', '_', 'Z', '1', '7', '_', 'Z', '1', '8', '_', 'Z', '1', '9', 0,
  /* 2651 */ 'b', '1', '9', 0,
  /* 2655 */ 'd', '1', '9', 0,
  /* 2659 */ 'h', '1', '9', 0,
  /* 2663 */ 'q', '1', '9', 0,
  /* 2667 */ 's', '1', '9', 0,
  /* 2671 */ 'w', '1', '9', 0,
  /* 2675 */ 'x', '1', '9', 0,
  /* 2679 */ 'z', '1', '9', 0,
  /* 2683 */ 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', 0,
  /* 2699 */ 'Q', '2', '6', '_', 'Q', '2', '7', '_', 'Q', '2', '8', '_', 'Q', '2', '9', 0,
  /* 2715 */ 'W', '2', '8', '_', 'W', '2', '9', 0,
  /* 2723 */ 'Z', '2', '6', '_', 'Z', '2', '7', '_', 'Z', '2', '8', '_', 'Z', '2', '9', 0,
  /* 2739 */ 'b', '2', '9', 0,
  /* 2743 */ 'd', '2', '9', 0,
  /* 2747 */ 'h', '2', '9', 0,
  /* 2751 */ 'q', '2', '9', 0,
  /* 2755 */ 's', '2', '9', 0,
  /* 2759 */ 'w', '2', '9', 0,
  /* 2763 */ 'x', '2', '9', 0,
  /* 2767 */ 'z', '2', '9', 0,
  /* 2771 */ 'D', '6', '_', 'D', '7', '_', 'D', '8', '_', 'D', '9', 0,
  /* 2783 */ 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', 0,
  /* 2795 */ 'W', '8', '_', 'W', '9', 0,
  /* 2801 */ 'X', '8', '_', 'X', '9', 0,
  /* 2807 */ 'Z', '6', '_', 'Z', '7', '_', 'Z', '8', '_', 'Z', '9', 0,
  /* 2819 */ 'b', '9', 0,
  /* 2822 */ 'd', '9', 0,
  /* 2825 */ 'h', '9', 0,
  /* 2828 */ 'p', '9', 0,
  /* 2831 */ 'q', '9', 0,
  /* 2834 */ 's', '9', 0,
  /* 2837 */ 'w', '9', 0,
  /* 2840 */ 'x', '9', 0,
  /* 2843 */ 'z', '9', 0,
  /* 2846 */ 'X', '2', '8', '_', 'F', 'P', 0,
  /* 2853 */ 'F', 'P', '_', 'L', 'R', 0,
  /* 2859 */ 'W', '3', '0', '_', 'W', 'Z', 'R', 0,
  /* 2867 */ 'L', 'R', '_', 'X', 'Z', 'R', 0,
  /* 2874 */ 'z', '1', '0', '_', 'h', 'i', 0,
  /* 2881 */ 'z', '2', '0', '_', 'h', 'i', 0,
  /* 2888 */ 'z', '3', '0', '_', 'h', 'i', 0,
  /* 2895 */ 'z', '0', '_', 'h', 'i', 0,
  /* 2901 */ 'z', '1', '1', '_', 'h', 'i', 0,
  /* 2908 */ 'z', '2', '1', '_', 'h', 'i', 0,
  /* 2915 */ 'z', '3', '1', '_', 'h', 'i', 0,
  /* 2922 */ 'z', '1', '_', 'h', 'i', 0,
  /* 2928 */ 'z', '1', '2', '_', 'h', 'i', 0,
  /* 2935 */ 'z', '2', '2', '_', 'h', 'i', 0,
  /* 2942 */ 'z', '2', '_', 'h', 'i', 0,
  /* 2948 */ 'z', '1', '3', '_', 'h', 'i', 0,
  /* 2955 */ 'z', '2', '3', '_', 'h', 'i', 0,
  /* 2962 */ 'z', '3', '_', 'h', 'i', 0,
  /* 2968 */ 'z', '1', '4', '_', 'h', 'i', 0,
  /* 2975 */ 'z', '2', '4', '_', 'h', 'i', 0,
  /* 2982 */ 'z', '4', '_', 'h', 'i', 0,
  /* 2988 */ 'z', '1', '5', '_', 'h', 'i', 0,
  /* 2995 */ 'z', '2', '5', '_', 'h', 'i', 0,
  /* 3002 */ 'z', '5', '_', 'h', 'i', 0,
  /* 3008 */ 'z', '1', '6', '_', 'h', 'i', 0,
  /* 3015 */ 'z', '2', '6', '_', 'h', 'i', 0,
  /* 3022 */ 'z', '6', '_', 'h', 'i', 0,
  /* 3028 */ 'z', '1', '7', '_', 'h', 'i', 0,
  /* 3035 */ 'z', '2', '7', '_', 'h', 'i', 0,
  /* 3042 */ 'z', '7', '_', 'h', 'i', 0,
  /* 3048 */ 'z', '1', '8', '_', 'h', 'i', 0,
  /* 3055 */ 'z', '2', '8', '_', 'h', 'i', 0,
  /* 3062 */ 'z', '8', '_', 'h', 'i', 0,
  /* 3068 */ 'z', '1', '9', '_', 'h', 'i', 0,
  /* 3075 */ 'z', '2', '9', '_', 'h', 'i', 0,
  /* 3082 */ 'z', '9', '_', 'h', 'i', 0,
  /* 3088 */ 'w', 's', 'p', 0,
  /* 3092 */ 'f', 'f', 'r', 0,
  /* 3096 */ 'w', 'z', 'r', 0,
  /* 3100 */ 'x', 'z', 'r', 0,
  /* 3104 */ 'n', 'z', 'c', 'v', 0,
  };

  static const uint16_t RegAsmOffsetNoRegAltName[] = {
    3092, 2763, 265, 3104, 3089, 3088, 3096, 3100, 332, 675, 946, 1217, 1488, 1759,
    2026, 2293, 2560, 2819, 53, 417, 763, 1037, 1308, 1579, 1850, 2117, 2384, 2651,
    153, 517, 863, 1137, 1408, 1679, 1946, 2213, 2480, 2739, 241, 597, 335, 678,
    949, 1220, 1491, 1762, 2029, 2296, 2563, 2822, 57, 421, 767, 1041, 1312, 1583,
    1854, 2121, 2388, 2655, 157, 521, 867, 1141, 1412, 1683, 1950, 2217, 2484, 2743,
    245, 601, 338, 681, 952, 1223, 1494, 1765, 2032, 2299, 2566, 2825, 61, 425,
    771, 1045, 1316, 1587, 1858, 2125, 2392, 2659, 161, 525, 871, 1145, 1416, 1687,
    1954, 2221, 2488, 2747, 249, 605, 341, 684, 955, 1226, 1497, 1768, 2035, 2302,
    2569, 2828, 65, 429, 775, 1049, 1320, 1591, 344, 687, 958, 1229, 1500, 1771,
    2038, 2305, 2572, 2831, 69, 433, 779, 1053, 1324, 1595, 1862, 2129, 2396, 2663,
    165, 529, 875, 1149, 1420, 1691, 1958, 2225, 2492, 2751, 253, 609, 347, 690,
    961, 1232, 1503, 1774, 2041, 2308, 2575, 2834, 73, 437, 783, 1057, 1328, 1599,
    1866, 2133, 2400, 2667, 169, 533, 879, 1153, 1424, 1695, 1962, 2229, 2496, 2755,
    257, 613, 350, 693, 964, 1235, 1506, 1777, 2044, 2311, 2578, 2837, 77, 441,
    787, 1061, 1332, 1603, 1870, 2137, 2404, 2671, 173, 537, 883, 1157, 1428, 1699,
    1966, 2233, 2500, 2759, 261, 353, 696, 967, 1238, 1509, 1780, 2047, 2314, 2581,
    2840, 81, 445, 791, 1065, 1336, 1607, 1874, 2141, 2408, 2675, 177, 541, 887,
    1161, 1432, 1703, 1970, 2237, 2504, 356, 699, 970, 1241, 1512, 1783, 2050, 2317,
    2584, 2843, 85, 449, 795, 1069, 1340, 1611, 1878, 2145, 2412, 2679, 181, 545,
    891, 1165, 1436, 1707, 1974, 2241, 2508, 2767, 269, 617, 2895, 2922, 2942, 2962,
    2982, 3002, 3022, 3042, 3062, 3082, 2874, 2901, 2928, 2948, 2968, 2988, 3008, 3028,
    3048, 3068, 2881, 2908, 2935, 2955, 2975, 2995, 3015, 3035, 3055, 3075, 2888, 2915,
    629, 902, 1175, 1446, 1717, 1984, 2251, 2518, 2777, 6, 365, 709, 981, 1252,
    1523, 1794, 2061, 2328, 2595, 97, 461, 807, 1081, 1352, 1623, 1890, 2157, 2424,
    2691, 193, 557, 281, 1169, 1440, 1711, 1978, 2245, 2512, 2771, 0, 359, 702,
    973, 1244, 1515, 1786, 2053, 2320, 2587, 89, 453, 799, 1073, 1344, 1615, 1882,
    2149, 2416, 2683, 185, 549, 273, 621, 895, 899, 1172, 1443, 1714, 1981, 2248,
    2515, 2774, 3, 362, 705, 977, 1248, 1519, 1790, 2057, 2324, 2591, 93, 457,
    803, 1077, 1348, 1619, 1886, 2153, 2420, 2687, 189, 553, 277, 625, 643, 915,
    1187, 1458, 1729, 1996, 2263, 2530, 2789, 19, 379, 724, 997, 1268, 1539, 1810,
    2077, 2344, 2611, 113, 477, 823, 1097, 1368, 1639, 1906, 2173, 2440, 2707, 209,
    573, 296, 1181, 1452, 1723, 1990, 2257, 2524, 2783, 13, 373, 717, 989, 1260,
    1531, 1802, 2069, 2336, 2603, 105, 469, 815, 1089, 1360, 1631, 1898, 2165, 2432,
    2699, 201, 565, 288, 635, 908, 912, 1184, 1455, 1726, 1993, 2260, 2527, 2786,
    16, 376, 720, 993, 1264, 1535, 1806, 2073, 2340, 2607, 109, 473, 819, 1093,
    1364, 1635, 1902, 2169, 2436, 2703, 205, 569, 292, 639, 303, 2859, 649, 921,
    1193, 1464, 1735, 2002, 2269, 2536, 2795, 26, 387, 732, 1005, 1276, 1547, 1818,
    2085, 2352, 2619, 121, 485, 831, 1105, 1376, 1647, 1914, 2181, 2448, 2715, 217,
    2853, 2867, 310, 2846, 655, 927, 1199, 1470, 1741, 2008, 2275, 2542, 2801, 33,
    395, 740, 1013, 1284, 1555, 1826, 2093, 2360, 2627, 129, 493, 839, 1113, 1384,
    1655, 1922, 2189, 2456, 669, 940, 1211, 1482, 1753, 2020, 2287, 2554, 2813, 46,
    409, 755, 1029, 1300, 1571, 1842, 2109, 2376, 2643, 145, 509, 855, 1129, 1400,
    1671, 1938, 2205, 2472, 2731, 233, 589, 325, 1205, 1476, 1747, 2014, 2281, 2548,
    2807, 40, 403, 748, 1021, 1292, 1563, 1834, 2101, 2368, 2635, 137, 501, 847,
    1121, 1392, 1663, 1930, 2197, 2464, 2723, 225, 581, 317, 661, 933, 937, 1208,
    1479, 1750, 2017, 2284, 2551, 2810, 43, 406, 751, 1025, 1296, 1567, 1838, 2105,
    2372, 2639, 141, 505, 851, 1125, 1396, 1667, 1934, 2201, 2468, 2727, 229, 585,
    321, 665,
  };

  static const char AsmStrsvlist1[] = {
  /* 0 */ 0,
  };

  static const uint8_t RegAsmOffsetvlist1[] = {
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0,
  };

  static const char AsmStrsvreg[] = {
  /* 0 */ 'v', '1', '0', 0,
  /* 4 */ 'v', '2', '0', 0,
  /* 8 */ 'v', '3', '0', 0,
  /* 12 */ 'v', '0', 0,
  /* 15 */ 'v', '1', '1', 0,
  /* 19 */ 'v', '2', '1', 0,
  /* 23 */ 'v', '3', '1', 0,
  /* 27 */ 'v', '1', 0,
  /* 30 */ 'v', '1', '2', 0,
  /* 34 */ 'v', '2', '2', 0,
  /* 38 */ 'v', '2', 0,
  /* 41 */ 'v', '1', '3', 0,
  /* 45 */ 'v', '2', '3', 0,
  /* 49 */ 'v', '3', 0,
  /* 52 */ 'v', '1', '4', 0,
  /* 56 */ 'v', '2', '4', 0,
  /* 60 */ 'v', '4', 0,
  /* 63 */ 'v', '1', '5', 0,
  /* 67 */ 'v', '2', '5', 0,
  /* 71 */ 'v', '5', 0,
  /* 74 */ 'v', '1', '6', 0,
  /* 78 */ 'v', '2', '6', 0,
  /* 82 */ 'v', '6', 0,
  /* 85 */ 'v', '1', '7', 0,
  /* 89 */ 'v', '2', '7', 0,
  /* 93 */ 'v', '7', 0,
  /* 96 */ 'v', '1', '8', 0,
  /* 100 */ 'v', '2', '8', 0,
  /* 104 */ 'v', '8', 0,
  /* 107 */ 'v', '1', '9', 0,
  /* 111 */ 'v', '2', '9', 0,
  /* 115 */ 'v', '9', 0,
  };

  static const uint8_t RegAsmOffsetvreg[] = {
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 12, 27,
    38, 49, 60, 71, 82, 93, 104, 115, 0, 15, 30, 41, 52, 63,
    74, 85, 96, 107, 4, 19, 34, 45, 56, 67, 78, 89, 100, 111,
    8, 23, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 12, 27, 38, 49, 60, 71,
    82, 93, 104, 115, 0, 15, 30, 41, 52, 63, 74, 85, 96, 107,
    4, 19, 34, 45, 56, 67, 78, 89, 100, 111, 8, 23, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    12, 27, 38, 49, 60, 71, 82, 93, 104, 115, 0, 15, 30, 41,
    52, 63, 74, 85, 96, 107, 4, 19, 34, 45, 56, 67, 78, 89,
    100, 111, 8, 23, 12, 27, 38, 49, 60, 71, 82, 93, 104, 115,
    0, 15, 30, 41, 52, 63, 74, 85, 96, 107, 4, 19, 34, 45,
    56, 67, 78, 89, 100, 111, 8, 23, 12, 27, 38, 49, 60, 71,
    82, 93, 104, 115, 0, 15, 30, 41, 52, 63, 74, 85, 96, 107,
    4, 19, 34, 45, 56, 67, 78, 89, 100, 111, 8, 23, 12, 27,
    38, 49, 60, 71, 82, 93, 104, 115, 0, 15, 30, 41, 52, 63,
    74, 85, 96, 107, 4, 19, 34, 45, 56, 67, 78, 89, 100, 111,
    8, 23, 12, 27, 38, 49, 60, 71, 82, 93, 104, 115, 0, 15,
    30, 41, 52, 63, 74, 85, 96, 107, 4, 19, 34, 45, 56, 67,
    78, 89, 100, 111, 8, 23, 12, 27, 38, 49, 60, 71, 82, 93,
    104, 115, 0, 15, 30, 41, 52, 63, 74, 85, 96, 107, 4, 19,
    34, 45, 56, 67, 78, 89, 100, 111, 8, 23, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3,
  };

  switch(AltIdx) {
  default:
    return (const char *)(sizeof(RegAsmOffsetvreg)/sizeof(RegAsmOffsetvreg[0]));
  case AArch64_NoRegAltName:
    return AsmStrsNoRegAltName+RegAsmOffsetNoRegAltName[RegNo-1];
  case AArch64_vlist1:
    return AsmStrsvlist1+RegAsmOffsetvlist1[RegNo-1];
  case AArch64_vreg:
    return AsmStrsvreg+RegAsmOffsetvreg[RegNo-1];
  }
#else
  return NULL;
#endif
}
