/* automatically generated by rust-bindgen */

pub type Enum_bgfx_render_frame = ::libc::c_uint;
pub const BGFX_RENDER_FRAME_NO_CONTEXT: ::libc::c_uint = 0;
pub const BGFX_RENDER_FRAME_RENDER: ::libc::c_uint = 1;
pub const BGFX_RENDER_FRAME_EXITING: ::libc::c_uint = 2;
pub const BGFX_RENDER_FRAME_COUNT: ::libc::c_uint = 3;
pub type bgfx_render_frame_t = Enum_bgfx_render_frame;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_bgfx_platform_data {
    pub ndt: *mut ::libc::c_void,
    pub nwh: *mut ::libc::c_void,
    pub context: *mut ::libc::c_void,
    pub backBuffer: *mut ::libc::c_void,
    pub backBufferDS: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct_bgfx_platform_data {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_bgfx_platform_data {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type bgfx_platform_data_t = Struct_bgfx_platform_data;
#[repr(C)]
#[derive(Copy)]
pub struct Struct_bgfx_internal_data {
    pub caps: *const Struct_bgfx_caps,
    pub context: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct_bgfx_internal_data {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for Struct_bgfx_internal_data {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
pub type bgfx_internal_data_t = Struct_bgfx_internal_data;
extern "C" {
    pub fn bgfx_render_frame() -> bgfx_render_frame_t;
    pub fn bgfx_set_platform_data(_data: *const bgfx_platform_data_t) -> ();
    pub fn bgfx_get_internal_data() -> *const bgfx_internal_data_t;
}
