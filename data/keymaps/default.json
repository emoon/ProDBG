// This is an extended json format, supporting comments
// standard json doesn't support comments (which I think is plain stupid)
// If you can parse a json file, skipping comments shouldn't be a problem
[
{
	// the default editor-key-bindings
	// on Mac OS X Ctrl is automaticly swapped with Meta
	// you can use Qt QKeySequence texts here, extended with the default key-names 
	"bindings": [
		
		{ "keys": "move_to_next_char", "command": "goto_next_char" },
		{ "keys": "move_to_previous_char", "command": "goto_prev_char" },
		{ "keys": "move_to_next_word", "command": "goto_next_word" },
		{ "keys": "move_to_previous_word", "command": "goto_prev_word" },
		{ "keys": "move_to_start_of_line", "command": "goto_bol" },
		{ "keys": "move_to_end_of_line", "command": "goto_eol" },
		{ "keys": "move_to_next_line", "command": "goto_next_line" },
		{ "keys": "move_to_previous_line", "command": "goto_prev_line" },
		{ "keys": "move_to_start_of_document", "command": "goto_bof" },
		{ "keys": "move_to_end_of_document", "command": "goto_eof" },
		{ "keys": "move_to_next_page", "command": "goto_page_down" },
		{ "keys": "move_to_previous_page", "command": "goto_page_up" },

		// selection
		{ "keys": "select_next_char", "command": "sel_next_char" },
		{ "keys": "select_previous_char", "command": "sel_prev_char" },
		{ "keys": "select_next_word", "command": "sel_next_word" },
		{ "keys": "select_previous_word", "command": "sel_prev_word" },
		{ "keys": "select_start_of_line", "command": "sel_to_bol" },
		{ "keys": "select_end_of_line", "command": "sel_to_eol" },
		{ "keys": "select_next_line", "command": "sel_to_next_line" },
		{ "keys": "select_previous_line", "command": "sel_to_prev_Line" },
		{ "keys": "select_start_of_document", "command": "sel_to_bof" },
		{ "keys": "select_end_of_document", "command": "sel_to_eof" },
		{ "keys": "select_next_page", "command": "sel_page_down" },
		{ "keys": "select_previous_page", "command": "sel_page_up" },

		{ "keys": "select_all", "command": "sel_all" },
		// { "keys": "Ctrl+D", "command": "sel_word" },		// is superseeded by 'find_under_expand'
		{ "keys": "Ctrl+L", "command": "sel_line" },
		{ "keys": "Ctrl+Shift+L", "command": "sel_prev_line" },
		{ "keys": "Meta+shift+Up", "command": "add_caret_prev_line" },
		{ "keys": "Meta+shift+Down", "command": "add_caret_next_line" },
		{ "keys": "Escape", "command": "sel_reset" },

		// TODO: We need to build in support for alternative keymaps per platform
		{ "keys": "Ctrl+Alt+Up", "command": "add_caret_prev_line" },
		{ "keys": "Ctrl+Alt+Down", "command": "add_caret_next_line" },

				// line entry
		{ "keys": "Enter", "command": "ins_newline" },
		{ "keys": "Return", "command": "ins_newline" },
        { "keys": "Shift+Enter", "command": "ins_newline" },
        { "keys": "Shift+Return", "command": "ins_newline" },

        // deletion left
        { "keys": "Backspace", "command": "del_left" },
		{ "keys": "Shift+Backspace", "command": "del_left" },
        { "keys": "Alt+Backspace", "command": "del_word_left" },
        { "keys": "Ctrl+Backspace", "command": "del_line_left" },

        // deletion right
        { "keys": "Delete", "command": "del_right" },
        { "keys": "Alt+Delete", "command": "del_word_right" },
        { "keys": "Ctrl+Delete", "command": "del_line_right" },

		// tab entry
		{ "keys": "Tab", "command": "tab" },
		// { "keys": "Backtab", "command": "tab_back" },
		{ "keys": "Shift+Tab", "command": "tab_back" },
		{ "keys": "Shift+Backtab", "command": "tab_back" },
		{ "keys": "Ctrl+]", "command": "indent" },
		{ "keys": "Ctrl+[", "command": "outdent" },


        // special entry
        { "keys": "Ctrl+Shift+D", "command": "duplicate" },
        { "keys": "Ctrl+/", "command": "toggle_comment" },
        { "keys": "Ctrl+Meta+/", "command": "toggle_block_comment" },

		/// TODO: add a backtab action here
		//set( QKeySequence( Qt::Key_BackTab ), new )

		// undo / redo comamnqds
		{ "keys": "undo", "command": "undo" },
		{ "keys": "redo", "command": "redo" },
		{ "keys": "Ctrl+U", "command": "soft_undo" },
        { "keys": "Ctrl+Shift+U", "command": "soft_redo" },

		// clipboard operations
        { "keys": "Ctrl+Insert", "command": "copy" },
        { "keys": "Shift+Delete", "command": "cut" },
        { "keys": "Shift+Insert", "command": "paste" },
        { "keys": "copy", "command": "copy" },
		{ "keys": "cut", "command": "cut" },
		{ "keys": "paste", "command": "paste" },

		// debug commands
		{ "keys": "Ctrl+Shift+X,S", "command": "debug_dump_scopes" },
		{ "keys": "Ctrl+Shift+X,R", "command": "debug_rebuild_scopes" },
		{ "keys": "Ctrl+Shift+X,U", "command": "debug_dump_undo_stack" },
        { "keys": "Ctrl+Shift+X,C", "command": "debug_dump_character_codes" },

		// find commands
		{ "keys": "Ctrl+E", "command": "find_use_sel" },
		{ "keys": "find_next", "command": "find_next_match" },
		{ "keys": "find_previous", "command": "find_prev_match" },
		{ "keys": "Meta+S", "command": "sel_next_match" },
		{ "keys": "Meta+Shift+S", "command": "sel_prev_match" },
		{ "keys": "Ctrl+Shift+Meta+A", "command": "sel_all_matches" },

        { "keys": "Ctrl+D", "command": "select_under_expand"},
        { "keys": "Alt+F3", "command":"select_all_under" },


        // move line command
        { "keys": "Ctrl+Meta+Up", "command":"move_lines_up" },
        { "keys": "Ctrl+Meta+Down", "command":"move_lines_down" }

	]
}
]
